<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gulimall.order.mapper.UndoLogMapper">
    
    <resultMap type="UndoLog" id="UndoLogResult">
        <result property="id"    column="id"    />
        <result property="branchId"    column="branch_id"    />
        <result property="xid"    column="xid"    />
        <result property="context"    column="context"    />
        <result property="rollbackInfo"    column="rollback_info"    />
        <result property="logStatus"    column="log_status"    />
        <result property="logCreated"    column="log_created"    />
        <result property="logModified"    column="log_modified"    />
        <result property="ext"    column="ext"    />
    </resultMap>

    <sql id="selectUndoLogVo">
        select id, branch_id, xid, context, rollback_info, log_status, log_created, log_modified, ext from undo_log
    </sql>

    <select id="selectUndoLogList" parameterType="UndoLog" resultMap="UndoLogResult">
        <include refid="selectUndoLogVo"/>
        <where>  
            <if test="branchId != null "> and branch_id = #{branchId}</if>
            <if test="xid != null  and xid != ''"> and xid = #{xid}</if>
            <if test="context != null  and context != ''"> and context = #{context}</if>
            <if test="rollbackInfo != null  and rollbackInfo != ''"> and rollback_info = #{rollbackInfo}</if>
            <if test="logStatus != null "> and log_status = #{logStatus}</if>
            <if test="logCreated != null "> and log_created = #{logCreated}</if>
            <if test="logModified != null "> and log_modified = #{logModified}</if>
            <if test="ext != null  and ext != ''"> and ext = #{ext}</if>
        </where>
    </select>
    
    <select id="selectUndoLogById" parameterType="Long" resultMap="UndoLogResult">
        <include refid="selectUndoLogVo"/>
        where id = #{id}
    </select>

    <insert id="insertUndoLog" parameterType="UndoLog" useGeneratedKeys="true" keyProperty="id">
        insert into undo_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="branchId != null">branch_id,</if>
            <if test="xid != null and xid != ''">xid,</if>
            <if test="context != null and context != ''">context,</if>
            <if test="rollbackInfo != null and rollbackInfo != ''">rollback_info,</if>
            <if test="logStatus != null">log_status,</if>
            <if test="logCreated != null">log_created,</if>
            <if test="logModified != null">log_modified,</if>
            <if test="ext != null">ext,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="branchId != null">#{branchId},</if>
            <if test="xid != null and xid != ''">#{xid},</if>
            <if test="context != null and context != ''">#{context},</if>
            <if test="rollbackInfo != null and rollbackInfo != ''">#{rollbackInfo},</if>
            <if test="logStatus != null">#{logStatus},</if>
            <if test="logCreated != null">#{logCreated},</if>
            <if test="logModified != null">#{logModified},</if>
            <if test="ext != null">#{ext},</if>
         </trim>
    </insert>

    <update id="updateUndoLog" parameterType="UndoLog">
        update undo_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="branchId != null">branch_id = #{branchId},</if>
            <if test="xid != null and xid != ''">xid = #{xid},</if>
            <if test="context != null and context != ''">context = #{context},</if>
            <if test="rollbackInfo != null and rollbackInfo != ''">rollback_info = #{rollbackInfo},</if>
            <if test="logStatus != null">log_status = #{logStatus},</if>
            <if test="logCreated != null">log_created = #{logCreated},</if>
            <if test="logModified != null">log_modified = #{logModified},</if>
            <if test="ext != null">ext = #{ext},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUndoLogById" parameterType="Long">
        delete from undo_log where id = #{id}
    </delete>

    <delete id="deleteUndoLogByIds" parameterType="String">
        delete from undo_log where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>